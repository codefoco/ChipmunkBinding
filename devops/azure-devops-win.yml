pool:
  name: Hosted VS2017
  demands:
  - msbuild
  - visualstudio
  - vstest

steps:
- checkout: self 
  submodules: true

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.0.2'
  inputs:
    versionSpec: 5.0.2

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: ChipmunkBinding.sln

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: ChipmunkBinding.Core.sln

- powershell: 'Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(''https://chocolatey.org/install.ps1''))'
  displayName: 'Install Choco'

- script: 'choco install gitversion.portable --pre '
  displayName: 'Install GitVersion'

- task: PowerShell@2
  displayName: 'PreBuild Script'
  inputs:
    targetType: filePath
    filePath: ./devops/PreBuild.ps1
    arguments: 'ChipmunkBinding ChipmunkBinding.nuspec'

- task: MSBuild@1
  displayName: 'Build solution ChipmunkBinding.sln'
  inputs:
    solution: ChipmunkBinding.sln
    configuration: Release

- task: MSBuild@1
  displayName: 'Build .NET Core'
  inputs:
    solution: ChipmunkBinding.Core.sln
    configuration: Release
    msbuildArguments: /restore

- task: DotNetCoreCLI@2
  displayName: 'dotnet vstest'
  inputs:
    command: custom
    custom: vstest
    arguments: '.\tests\build\netcore\bin\Release\netcoreapp2.0\ChipmunkBindingTest.dll'

- task: MSBuild@1
  displayName: 'Build Android'
  inputs:
    solution: ChipmunkBinding.Android.sln
    configuration: Release
    msbuildArguments: '/p:AndroidNdkDirectory=%ANDROID_NDK_HOME%'

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: '.\tests\build\net45\bin\Release\ChipmunkBindingTest.dll'

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Xamarin.iOS'
  inputs:
    buildType: 'specific'
    project: 'NuGets'
    definition: 'ChipmunkBinding.Mac'
    specificBuildWithTriggering: true
    artifactName: Xamarin.iOS.ChipmunkBinding.dll

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Xamarin.Mac'
  inputs:
    buildType: 'specific'
    project: 'NuGets'
    definition: 'ChipmunkBinding.Mac'
    specificBuildWithTriggering: true
    artifactName: Xamarin.Mac.ChipmunkBinding.dll

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Xamarin.watchOS'
  inputs:
    buildType: 'specific'
    project: 'NuGets'
    definition: 'ChipmunkBinding.Mac'
    specificBuildWithTriggering: true
    artifactName: Xamarin.watchOS.ChipmunkBinding.dll

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Xamarin.tvOS'
  inputs:
    buildType: 'specific'
    project: 'NuGets'
    definition: 'ChipmunkBinding.Mac'
    specificBuildWithTriggering: true
    artifactName: Xamarin.tvOS.ChipmunkBinding.dll

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build libchipmunk.dylib'
  inputs:
    buildType: 'specific'
    project: 'NuGets'
    definition: 'ChipmunkBinding.Mac'
    specificBuildWithTriggering: true
    artifactName: libchipmunk.dylib

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build libchipmunk.so (Linux)'
  inputs:
    buildType: 'specific'
    project: 'NuGets'
    definition: 'ChipmunkBinding.Linux'
    specificBuildWithTriggering: true
    artifactName: libchipmunk.so

- task: CopyFiles@2
  displayName: 'Copy Files to: lib/Release/xamarinios/'
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)\Xamarin.iOS.ChipmunkBinding.dll\'
    TargetFolder: lib/Release/xamarinios/

- task: CopyFiles@2
  displayName: 'Copy Files to: lib/Release/xamarinmac/'
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)\Xamarin.Mac.ChipmunkBinding.dll\'
    TargetFolder: lib/Release/xamarinmac/

- task: CopyFiles@2
  displayName: 'Copy Files to: lib/Release/xamarintvos/ '
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)\Xamarin.tvOS.ChipmunkBinding.dll\'
    TargetFolder: lib/Release/xamarintvos/

- task: CopyFiles@2
  displayName: 'Copy Files to: lib/Release/xamarinwatchos/'
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)\Xamarin.watchOS.ChipmunkBinding.dll\'
    TargetFolder: lib/Release/xamarinwatchos/

- task: CopyFiles@2
  displayName: 'Copy Files to: runtimes/osx/native/'
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)\libchipmunk.dylib\'
    TargetFolder: runtimes/osx/native/

- task: CopyFiles@2
  displayName: 'Copy Files to: runtimes/linux-x64/native/'
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)\libchipmunk.so\'
    TargetFolder: 'runtimes/linux-x64/native/'

- script: 'nuget setapikey $(apikey)'
  displayName: 'Set NuGet API Key'

- task: PowerShell@2
  displayName: 'Package NuGet'
  inputs:
    targetType: filePath
    filePath: ./devops/Package.ps1
    arguments: 'ChipmunkBinding ChipmunkBinding.nuspec'

- script: 'rename *.nupkg ChipmunkBinding.nupkg'
  displayName: 'Rename Nuget Package'

- task: PublishBuildArtifacts@1
  displayName: 'Save ChipmunkBinding.nupkg Artifact'
  inputs:
    PathtoPublish: ChipmunkBinding.nupkg
    ArtifactName: ChipmunkBinding.nupkg

- task: PowerShell@2
  displayName: 'Publish NuGet'
  inputs:
    targetType: filePath
    filePath: ./devops/Publish.ps1
    arguments: ChipmunkBinding
